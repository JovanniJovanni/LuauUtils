"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[343],{41539:function(t){t.exports=JSON.parse('{"functions":[{"name":"range","desc":"```lua\\n\\tfor i = min, max, step do\\n\\n\\tend\\n\\n\\t-- Is equivalent to:\\n\\n\\tfor i in Iterators.range(min, max, step) do\\n\\n\\tend\\n```","params":[{"name":"min","desc":"","lua_type":"number"},{"name":"max","desc":"","lua_type":"number"},{"name":"step","desc":"","lua_type":"number? = 1"}],"returns":[{"desc":"","lua_type":"Iterator<number?>"}],"function_type":"static","source":{"line":29,"path":"src/Iterators.lua"}},{"name":"map","desc":"Returns an iterator that applies callbackFn to each element of arr. Additional parameters will be passed to callbackFn.\\n\\n```lua\\n\\tlocal arr = {1, 2, 3}\\n\\tlocal sum = 0\\n\\tfor i in Iterators.map(arr, function(i)\\n\\t\\tsum += i\\n\\tend)\\n\\tprint(sum)\\n\\t-- Output:\\n\\t-- 1\\n\\t-- 3\\n\\t-- 6\\n```","params":[{"name":"arr","desc":"","lua_type":"{T}"},{"name":"callbackFn","desc":"","lua_type":"(T, K...) -> V"},{"name":"...","desc":"","lua_type":"K..."}],"returns":[{"desc":"","lua_type":"Iterator<V>"}],"function_type":"static","source":{"line":61,"path":"src/Iterators.lua"}},{"name":"zip","desc":"Returns an iterator that returns each element of the arrays in parallel.\\n\\n```lua\\n\\tlocal arr1 = {1, 2, 3}\\n\\tlocal arr2 = {4, 5, 6}\\n\\tfor i, j in Iterators.zip(arr1, arr2) do\\n\\t\\tprint(i, j)\\n\\tend\\n\\t-- Output:\\n\\t-- 1 4\\n\\t-- 2 5\\n\\t-- 3 6\\n```","params":[{"name":"arr1","desc":"","lua_type":"{T}"},{"name":"arr2","desc":"","lua_type":"{V}"}],"returns":[{"desc":"","lua_type":"Iterator<T, V>"}],"function_type":"static","source":{"line":93,"path":"src/Iterators.lua"}}],"properties":[],"types":[{"name":"Iterator<T...>","desc":"","lua_type":"() -> (T...)?","source":{"line":10,"path":"src/Iterators.lua"}}],"name":"Iterators","desc":"","source":{"line":4,"path":"src/Iterators.lua"}}')}}]);